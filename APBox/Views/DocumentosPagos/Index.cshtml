@model API.Models.DocumentosRecibidos.DocumentosRecibidosModel
@using Aplicacion.LogicaPrincipal.Acondicionamientos.Catalogos;

@using APBox.Context;

@{
    var _db = new APBoxContext();
    var usuarioId = Convert.ToInt32(Session["UsuarioId"]);
    var usuario = _db.Usuarios.Find(usuarioId);
    var SocioComercial = _db.Perfiles.Where(i => i.Id == usuario.PerfilId).FirstOrDefault();
    var SocioComercialId = SocioComercial.Id;
    var usuarioDepartamento = usuario.Departamento_Id;
    var usuarioSocioComercial = usuario.PerfilId;
    var usuarioesProveedor = usuario.esProveedor;
}

<div class="row g-5 g-xl-8">
    <div class="col-12">
        <div class="card card-flush shadow-sm py-4 mb-xl-8">
            <!--begin::Card header-->
            <div class="card-header">
                <h3 class="card-title align-items-start flex-column w-100 mb-5">
                    <span class="card-label text-gray-900">Comprobantes Aprobados</span>
                    <span class="text-gray-600 mt-4 fw-semibold fs-6">Lista de comprobantes con Estado Comercial <span class="badge badge-light-success">Aprobado</span></span>
                </h3>
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="fa fa-magnifying-glass position-absolute ms-4"></i>
                    <input type="text" data-kt-filter-Individuales="search" class="form-control form-control-solid w-250px ps-14" placeholder="Buscar" />
                </div>
                <!--end::Search-->
                <div class="card-toolbar flex-row-fluid justify-content-end gap-5">

                </div>
            </div>
            <!--end::Card header-->
            <!--begin::Card body-->
            <div class="card-body pt-0">
                <div class="d-flex flex-column gap-10">
                    <table class="table align-middle rounded table-row-dashed fs-7 g-5" id="tablaIndividuales">
                        <thead>
                            <tr class="text-start text-gray-600 fw-bold fs-7 text-uppercase">
                                <th class="min-w-100px">Socio Comercial</th>
                                <th class="min-w-100px">Identificador</th>
                                <th class="min-w-100px">Datos de Recepción</th>
                                <th class="min-w-100px text-end">Monto</th>
                                <th class="min-w-100px text-center">Referencia</th>
                                <th class="min-w-100px text-center">Estado Pago</th>
                                <th class="min-w-100px"></th>
                            </tr>
                        </thead>
                        <tbody class="align-text-top">

                            @foreach (var item in Model.DocumentosRecibidos.Where(i => i.EstadoComercial == API.Enums.c_EstadoComercial.Aprobado))
                            {
                                var aprobacion = item.AprobacionesDR;

                                ViewBag.usuarioEntrega = AcondicionarUsuarios.ObtenerNombreCompleto((Int32)aprobacion.UsuarioEntrega_Id);

                                var departamentoUsuarioSolicitante = _db.Departamentos.Find(aprobacion.DepartamentoUsuarioSolicitante_Id);
                                var nombreDepartamento = departamentoUsuarioSolicitante != null ? departamentoUsuarioSolicitante.Nombre : "Departamento no encontrado";
                                ViewBag.nombreDepartamento = nombreDepartamento;

                                ViewBag.usuarioAprobador = AcondicionarUsuarios.ObtenerNombreCompleto((Int32)aprobacion.UsuarioAprobacionComercial_id);


                                <tr>
                                    <td>
                                        @item.SocioComercial.RazonSocial <br />
                                        <span class="text-gray-600">@item.SocioComercial.Rfc</span>

                                    </td>
                                    <td>
                                        @item.CfdiRecibidos_Serie - @item.CfdiRecibidos_Folio <br />
                                        <span class="text-gray-600">@item.CfdiRecibidos_UUID</span> <br />
                                        <span class="text-gray-600">@item.FechaComprobante.ToString("dd/MM/yyyy")</span>
                                    </td>
                                    <td>
                                        <div class="badge">Usuario Entrega:</div> @ViewBag.usuarioEntrega <br />
                                        <div class="badge">Fecha de Entrega:</div> <span class="text-gray-600">@item.AprobacionesDR.FechaSolicitud.Value.ToString("dd MMM, yyyy")</span><br />
                                        <div class="separator"></div>
                                        <div class="badge">Aprobador:</div> @ViewBag.usuarioAprobador <br />
                                        <div class="badge">Departamento:</div> <span class="text-gray-600">@ViewBag.nombreDepartamento</span><br />
                                        <div class="badge">Fecha de Aprobación: </div> <span class="text-gray-600">@item.AprobacionesDR.FechaAprobacionComercial.Value.ToString("dd MMM, yyyy")</span><br />
                                    </td>
                                    <td class="text-end">
                                        @item.Monto.ToString("c") <br />
                                        <div class="text-gray-600">@item.Moneda_Id</div> <br />
                                    </td>
                                    <td>
                                        @item.Referencia
                                    </td>
                                    <td class="text-center">
                                        @switch (item.EstadoPago)
                                        {
                                            case API.Enums.c_EstadoPago.EnRevision:
                                                <div class="badge badge-light-primary">En Revision</div>
                                                break;
                                            case API.Enums.c_EstadoPago.Aprobado:
                                                <div class="badge badge-light-info">Aprobado</div>
                                                break;
                                            case API.Enums.c_EstadoPago.Pagado:
                                                <div class="badge badge-light-success">Pagado</div>
                                                break;
                                            case API.Enums.c_EstadoPago.Completado:
                                                <div class="badge badge-light-dark">Completado</div>
                                                break;
                                            case API.Enums.c_EstadoPago.Rechazado:
                                                <div class="badge badge-light-danger">Rechazado</div>
                                                break;
                                            default:
                                                break;
                                        }

                                    </td>
                                    <td class="text-end">
                                        <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                            Acciones
                                            <i class="ki-duotone ki-down fs-5 ms-1"></i>
                                        </a>
                                        <!--begin::Menu-->
                                        <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true" style="">

                                            <div class="menu-item px-3">@Html.ActionLink("Revisión", "Revision", new { id = item.Id }, new { @class = "menu-link px-3" })</div>
                                            <div class="menu-item px-3">@Html.ActionLink("Descarga Xml", "DescargaXml", new { id = item.Id }, new { @class = "menu-link px-3" })</div>
                                            <div class="menu-item px-3">@Html.ActionLink("Descarga Pdf", "DescargaPDF", new { id = item.Id }, new { @class = "menu-link px-3" })</div>
                                        </div>
                                        <!--end::Menu-->
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!--end::Card header-->
        </div>
    </div>
</div>

<div class="row g-5 g-xl-8">
    <div class="col-12">
        <div class="card card-flush shadow-sm py-4 mb-xl-8">
            <!--begin::Card header-->
            <div class="card-header">
                <h3 class="card-title align-items-start flex-column w-100 mb-5">
                    <span class="card-label text-gray-900">Comprobantes En Revisión</span>
                    <span class="text-gray-600 mt-4 fw-semibold fs-6">Lista de comprobantes con Estado Comercial En Revisión en espera del Usuario Solicitante para su procesamiento</span>
                </h3>
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="fa fa-magnifying-glass position-absolute ms-4"></i>
                    <input type="text" data-kt-filter-Grupales="search" class="form-control form-control-solid w-250px ps-14" placeholder="Buscar" />
                </div>
                <!--end::Search-->
                <div class="card-toolbar flex-row-fluid justify-content-end gap-5">

                </div>
            </div>
            <!--end::Card header-->
            <!--begin::Card body-->
            <div class="card-body pt-0">
                <div class="d-flex flex-column gap-10">
                    <table class="table align-middle rounded table-row-dashed fs-7 g-5" id="tablaGrupales">
                        <thead>
                            <tr class="text-start text-gray-600 fw-bold fs-7 text-uppercase">
                                <th class="min-w-100px">Socio Comercial</th>
                                <th class="min-w-100px">Identificador</th>
                                <th class="min-w-100px">Datos de Recepción</th>
                                <th class="min-w-100px text-end">Monto</th>
                                <th class="min-w-100px text-center">Referencia</th>
                                <th class="min-w-100px text-center">Estado Comercial</th>
                                <th class="min-w-100px"></th>
                            </tr>
                        </thead>
                        <tbody class="align-text-top">
                            @foreach (var item in Model.DocumentosRecibidos.Where(i => i.EstadoComercial == API.Enums.c_EstadoComercial.EnRevision))
                            {
                                var aprobacion = item.AprobacionesDR;

                                var usuarioSolicitante = _db.Usuarios.Find(aprobacion.UsuarioAprobacionComercial_id);
                                var nombreAprobador = usuarioSolicitante != null ? string.Format("{0} {1} {2}", usuarioSolicitante.Nombre, usuarioSolicitante.ApellidoPaterno, usuarioSolicitante.ApellidoMaterno) : "Usuario no encontrado";
                                ViewBag.nombreAprobador = nombreAprobador;

                                var departamentoUsuarioSolicitante = _db.Departamentos.Find(aprobacion.DepartamentoUsuarioSolicitante_Id);
                                var nombreDepartamento = departamentoUsuarioSolicitante != null ? departamentoUsuarioSolicitante.Nombre : "Departamento no encontrado";
                                ViewBag.nombreDepartamento = nombreDepartamento;

                                <tr>
                                    <td>
                                        @item.SocioComercial.RazonSocial <br />
                                        <span class="text-gray-600">@item.SocioComercial.Rfc</span>
                                    </td>
                                    <td>
                                        @item.CfdiRecibidos_Serie - @item.CfdiRecibidos_Folio <br />
                                        <span class="text-gray-600">@item.CfdiRecibidos_UUID</span> <br />
                                        <span class="text-gray-600">@item.FechaComprobante.ToString("dd/MM/yyyy")</span>
                                    </td>
                                    <td>
                                        Solicitante: @ViewBag.nombreAprobador <br />
                                        <span class="text-gray-600">@ViewBag.nombreDepartamento </span><br />
                                        <span class="text-gray-600">Fecha de Entrega: @item.FechaEntrega.ToString("dd/MM/yyyy")</span><br />
                                    </td>
                                    <td class="text-end">
                                        @item.Monto.ToString("c") <br />
                                        <div class="text-gray-600">@item.Moneda_Id</div>
                                    </td>
                                    <td>
                                        @item.Referencia
                                    </td>
                                    <td class="text-center">
                                        @switch (item.EstadoComercial)
                                        {
                                            case API.Enums.c_EstadoComercial.Aprobado:
                                                <div class="badge badge-light-success">Aprobado</div>
                                                break;
                                            case API.Enums.c_EstadoComercial.EnRevision:
                                                <div class="badge badge-light-primary">En Revisión</div>
                                                break;
                                            case API.Enums.c_EstadoComercial.Rechazado:
                                                <div class="badge badge-light-danger">Rechazado</div>
                                                break;
                                            default:
                                                break;
                                        }
                                    </td>
                                    <td class="text-end">
                                        <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                            Acciones
                                            <i class="ki-duotone ki-down fs-5 ms-1"></i>
                                        </a>
                                        <!--begin::Menu-->
                                        <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true" style="">

                                            <div class="menu-item px-3">@Html.ActionLink("Revisión", "Revision", new { id = item.Id }, new { @class = "menu-link px-3" })</div>
                                            <div class="menu-item px-3">@Html.ActionLink("Descarga Xml", "DescargaXml", new { id = item.Id }, new { @class = "menu-link px-3" })</div>
                                            <div class="menu-item px-3">@Html.ActionLink("Descarga Pdf", "DescargaPDF", new { id = item.Id }, new { @class = "menu-link px-3" })</div>

                                        </div>
                                        <!--end::Menu-->
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!--end::Card header-->
        </div>
    </div>
</div>

<div class="hiddenDiv">
    <div class="d-flex align-items-center py-3 py-md-1" id="tools">
        <!--begin::Wrapper-->
        <div class="me-4">
            <!--begin::Menu-->
            <a href="#" class="btn btn-custom btn-active-white btn-flex btn-color-white btn-active-color-white" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                <i class="ki-duotone ki-filter fs-5 me-1"><span class="path1"></span><span class="path2"></span></i>
                Filtros
            </a>
            <!--begin::Menu 1-->
            <div class="menu menu-sub menu-sub-dropdown w-250px w-md-300px" data-kt-menu="true" id="kt_menu_65a6fdf2ec643">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })
                    @Html.HiddenFor(model => model.SucursalId)
                    <!--begin::Header-->
                    <div class="px-7 py-5">
                        <div class="fs-5 text-gray-900 fw-bold">Opciones</div>
                    </div>
                    <!--end::Header-->
                    <!--begin::Menu separator-->
                    <div class="separator border-gray-200"></div>
                    <!--end::Menu separator-->
                    <!--begin::Form-->
                    <div class="px-7 py-5">
                        <!--begin::Input group-->
                        <div class="mb-10">
                            <!--begin::Label-->
                            <label class="form-label fw-semibold">Periodo:</label>
                            <!--end::Label-->
                            <!--begin::Input-->
                            <div class="mb-3">
                                @Html.EditorFor(model => model.FechaInicial, new { htmlAttributes = new { @class = "form-control fecha" } })
                            </div>
                            <div class="mb-3">
                                @Html.EditorFor(model => model.FechaFinal, new { htmlAttributes = new { @class = "form-control fecha mb-2" } })
                            </div>
                            <!--end::Input-->
                        </div>
                        <!--end::Input group-->
                        <!--begin::Actions-->
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-sm btn-primary" data-kt-menu-dismiss="true">Aplicar</button>
                        </div>
                        <!--end::Actions-->
                    </div>
                    <!--end::Form-->
                }
            </div>
            <!--end::Menu 1-->
            <!--end::Menu-->
        </div>
        <!--end::Wrapper-->
        <!--begin::Button-->
        <a href="@Url.Action("CargaCfdi","DocumentosRecibidos")" class="btn btn-secondary">
            Nuevo
        </a>
        <!--end::Button-->

    </div>
</div>


@Html.Partial("~/Views/DocumentosRecibidosPartials/_DocumentoRecibidoPagoScripts.cshtml")



