<script>
function validarEmail() {
    // Lógica de tu función existente

    // Ahora, agrega la lógica AJAX para validar el email
    var email = $('#emailSolicitante').val();

    $.ajax({
            url: '@Url.Action("ValidadorEmail", "DocumentosRecibidos")',
            type: 'POST',
            dataType: 'json',
            data: { VerificarEmail: email },
            success: function (data) {
                if (data.success) {
                    // La validación fue exitosa
                    //alert('Email válido');

                    // Accede a los valores de ViewBag en la respuesta JSON
                    var usuarioSolicitanteNombre = data.UsuarioSolicitanteNombre;
                    var usuarioSolicitanteDepartamento = data.UsuarioSolicitanteDepartamento;
                    var usuarioSolicitanteEmail = data.UsuarioSolicitanteEmail;

                    // Utiliza estos valores como desees, por ejemplo, ponlos en dos div
                    $('#nombreDiv').text(usuarioSolicitanteNombre);
                    $('#emailDiv').text(usuarioSolicitanteEmail);
                    $('#departamentoDiv').text(usuarioSolicitanteDepartamento);
                    $('.submit').removeClass('disabled');
                    $('#cuadroUsuarioSolicitante').show();

                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": false,
                        "positionClass": "toastr-bottom-center",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "500",
                        "hideDuration": "500",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    };
                    toastr.info("", "Email encontrado correctamente");

                } else {
                    // La validación falló
                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": false,
                        "positionClass": "toastr-bottom-center",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "500",
                        "hideDuration": "500",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    };
                    toastr.error("", "Email no fue encontrado, favor de verificar");
                }
            },
            error: function (xhr, status, error) {
                // Manejar el error de la solicitud y mostrar el mensaje de error
                console.error(xhr.responseText);
                var jsonResponse = JSON.parse(xhr.responseText);
                //alert("Error: " + jsonResponse.message);
            }
        });
    }

    var radioRechazado = document.getElementById('rechazado');
    console.log("rechazado: " + radioRechazado);
    var radioAprobado = document.getElementById('aprobado');
    var motivoRechazoDiv = document.getElementById('motivo-rechazo');
    radioRechazado.addEventListener('change', function () {
        if (radioRechazado.checked) {
            motivoRechazoDiv.style.display = 'block';
            $('#EstadoComercial').val(2);
        }
    });

    radioAprobado.addEventListener('change', function () {
        motivoRechazoDiv.style.display = 'none';
        $('#MotivoRechazo').val("");
        $('#EstadoComercial').val(1);
    });

</script>

<script>


    $(document).ready(function () {
        "use strict";

        // Class definition
        var KTDatatablesExample = function () {
            // Shared variables
            var table;
            var datatable;

            // Private functions
            var initDatatable = function () {
                // Set date data order
                const tableRows = table.querySelectorAll('tbody tr');

                // Init datatable --- more info on datatables: https://datatables.net/manual/
                datatable = $(table).DataTable({
                    "info": false,
                    'order': [],
                    'pageLength': 10,
                });
            }

            // Hook export buttons

            // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter-Individuales="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            // Public methods
            return {
                init: function () {
                    table = document.querySelector('#tablaIndividuales');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    handleSearchDatatable();
                }
            };
        }();

        // On document ready
        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample.init();
        });
    });

    $(document).ready(function () {
        "use strict";

        // Class definition
        var KTDatatablesExample = function () {
            // Shared variables
            var table;
            var datatable;

            // Private functions
            var initDatatable = function () {
                // Set date data order
                const tableRows = table.querySelectorAll('tbody tr');

                // Init datatable --- more info on datatables: https://datatables.net/manual/
                datatable = $(table).DataTable({
                    "info": false,
                    'order': [],
                    'pageLength': 10,
                });
            }

            // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
            var handleSearchDatatable = () => {
                const filterSearch = document.querySelector('[data-kt-filter-Grupales="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    datatable.search(e.target.value).draw();
                });
            }

            // Public methods
            return {
                init: function () {
                    table = document.querySelector('#tablaGrupales');

                    if (!table) {
                        return;
                    }

                    initDatatable();
                    handleSearchDatatable();
                }
            };
        }();

        // On document ready
        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesExample.init();
        });
    });


</script>