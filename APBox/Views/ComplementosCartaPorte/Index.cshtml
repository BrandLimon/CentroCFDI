@model API.Models.Operaciones.ComplementosCartaPorteModel

@{
    ViewBag.Title = "Complementos de Carta Porte";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="page-title">
        <div class="row">
            <div class="col-lg-6">
                <h2>Complementos de Recepción de CartaPorte</h2>
            </div>
            <div class="col-sm-2">
                @Html.EnumDropDownListFor(model => model.Mes, new { htmlAttributes = new { @class = "clean form-control" } })
                @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-2">
                @Html.EditorFor(model => model.Anio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-1">
                <button class="btn btn-alt btn-primary float-left multiple" type="submit" value="Filtrar" name="actionName">
                    <span></span> <i class="fas fa-search"></i>
                </button>
            </div>

            <div class="col-lg-1">
                <div class="btn-group pull-right float-right">
                    <button type="button" class="btn btn-primary dropdown-toggle float-right" data-toggle="dropdown" aria-expanded="false">
                        <span>Nuevo</span> <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a onclick="location.href='@Url.Action("Create", "ComplementosCartaporte")';return false;">Manual</a></li>
                        <li><a onclick="location.href='@Url.Action("Cargar", "ComplementosCartaPorte")';return false;">Layout</a></li>
                    </ul>
                </div>
            </div>

        </div>
    </div>

    <div class="panel">
        <div class="panel-body">
            <h3 class="title-hero">
                CFDi Generados con complemento de Carta Porte
            </h3>
            <button class="btn btn-alt btn-primary float-left btn-xs" type="" value="" name="">
                <span> Timbrar Seleccionados </span>
            </button>
            <div class="clearfix"></div>
            <div class="row">
                <table class="table table-condensed ">

                    <thead>
                        <tr>
                            <th>
                                Seleccionado
                            </th>
                            <th>
                                RFCReceptor
                            </th>
                            <th>
                                Folio
                            </th>
                            <th>
                                Tipo Comprobante
                            </th>
                            <th>
                                Tipo Transporte
                            </th>
                            <th>
                                Fecha del Documento
                            </th>
                            <th>
                                Estado
                            </th>
                            <th>
                                Opciones
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ComplementosCartaPorte.Count; i++)
                        {
                        <tr>
                            <td>
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].Id)
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].FormaPago)
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].FechaDocumento)
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].TipoDeComprobante)
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].ClaveTransporteId)
                                @Html.HiddenFor(model => model.ComplementosCartaPorte[i].Receptor.Rfc)

                            </td>
                            <td>
                                @Html.DisplayFor(model => Model.ComplementosCartaPorte[i].Receptor.Rfc)
                            </td>
                            <td>
                                @if (Model.ComplementosCartaPorte[i].FacturaEmitida != null)
                                {
                                @Html.DisplayFor(model => Model.ComplementosCartaPorte[i].FacturaEmitida.Folio);
                                }
                                else
                                {
                                     @Html.Raw("Pendiente")}
                            </td>
                            <td>
                                @if (Model.ComplementosCartaPorte[i].TipoDeComprobante == CFDI.API.Enums.CFDI33.c_TipoDeComprobante.I)
                                {
                                    @Html.Raw("Ingreso")
                                }
                                else
                                {
                                    @Html.Raw("Tralado")
                                }
                            </td>
                            <td>
                                @if (Model.ComplementosCartaPorte[i].ClaveTransporteId == "01")
                                {@Html.Raw("AutoTransporte")}
                                @if (Model.ComplementosCartaPorte[i].ClaveTransporteId == "02")
                                {@Html.Raw("Transporte Maritimo")}
                                @if (Model.ComplementosCartaPorte[i].ClaveTransporteId == "03")
                                {@Html.Raw("Transporte Aereo")}
                                @if (Model.ComplementosCartaPorte[i].ClaveTransporteId == "04")
                                {@Html.Raw("Transporte Ferroviario")}
                                @if (Model.ComplementosCartaPorte[i].ClaveTransporteId == "05")
                                {@Html.Raw("Ducto")}
                            </td>
                            <td>
                                @Html.DisplayFor(model => Model.ComplementosCartaPorte[i].FechaDocumento)
                            </td>
                            <td>
                                @if (Model.ComplementosCartaPorte[i].Generado == true)
                                {
                                    if (Model.ComplementosCartaPorte[i].Status == API.Enums.Status.Activo)
                                    {
                                        <p><span class="fa fa-clipboard-check font-green"></span> Generado</p> }
                                    else
                                    {
                                        <p><span class="fa fa-calendar-times font-red"></span> Cancelado</p>
                                    }
                                }
                                else
                                {
                                    <p><span class="fa fa-edit font-purple"></span> Pendiente</p>
                                }
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="fa fa-cog"></span> Opciones
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-right">
                                        @if (Model.ComplementosCartaPorte[i].Generado)
                                        {
                                            if (Model.ComplementosCartaPorte[i].Status == API.Enums.Status.Activo)
                                            {
                                                <li>@Html.ActionLink("Descargar XML", "Descargar", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12" })</li>
                                                <li>@Html.ActionLink("Descargar PDF", "DescargarPDF", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12" })</li>
                                                <li>@Html.ActionLink("Cancelar", "", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12 font-red", onclick = "return confirm('¿Está seguro que desea cancelar este CFDI?');" })</li>
                                            }
                                            else
                                            {
                                                @*<li>@Html.ActionLink("Descargar Acuse", "DescargarAcuse", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12" })</li>*@
                                            }

                                        }
                                        else
                                        {
                                            <li>@Html.ActionLink("Descargar", "", new { }, new { @class = "font-size-12" })</li>
                                            <li>@Html.ActionLink("Editar Carta Porte", "Edit", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12" })</li>
                                            <li>@Html.ActionLink("Generar", "Generar", new { id = Model.ComplementosCartaPorte[i].Id }, new { @class = "font-size-12 font-green" })</li>
                                            <li>@Html.ActionLink("Eliminar", "Delete", new { id = Model.ComplementosCartaPorte[i].Id }, new { onclick = "return confirm('Are you sure you wish to delete this complemento?');" } )</li>
                                        }
                                    </ul>
                                </div>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
}