@model API.Catalogos.Usuario
@using APBox.Context;

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

<div class="card card-flush py-4">
    <div class="card-header">
        <div class="card-title">
            <h2>Resetear Password</h2>
        </div>
    </div>
    <!--begin::Card body-->
    <div class="card-body pt-0">

        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @Html.ValidationSummary(true, "", new { @class = "label-blue-alt", @style = "color:red;" })
        <div class="d-flex mb-7 row ">
            <div class="mb-10 row">
                <div class="form-group col-4 ">
                    @Html.LabelFor(model => model.PasswordAnterior, htmlAttributes: new { @class = "form-label required" })
                    @Html.EditorFor(model => model.PasswordAnterior, new { htmlAttributes = new { @class = "form-control mb-2" } })
                    @Html.ValidationMessageFor(model => model.PasswordAnterior, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-4 ">
                    @Html.LabelFor(model => model.PasswordNuevo, htmlAttributes: new { @class = "form-label required" })
                    @Html.EditorFor(model => model.PasswordNuevo, new { htmlAttributes = new { @class = "form-control mb-2" } })
                    @Html.ValidationMessageFor(model => model.PasswordNuevo, "", new { @class = "text-danger" })
                </div>

            </div>

        </div>
    </div>
</div>
<div class="clearfix"></div>

    <!--begin::Guardar-->
    <div class="d-flex justify-content-end">
        <!--begin::Button-->
        <a href="@Url.Action("Index","Home")" class="btn btn-light me-5">
            Cancelar
        </a>
        <!--end::Button-->
        <!--begin::Button-->
        <button type="submit" class="btn btn-primary">
            <span class="indicator-label">
                Guardar
            </span>
        </button>
        <!--end::Button-->
    </div>
    <!--end::Guardar-->
}
<script>
    $(document).ready(function () {
        // Captura el evento de entrada en el campo passwordInput
        $('#PasswordNuevo').on('input', function () {
            // Obtén el valor actual del campo y elimina espacios en blanco al inicio y al final
            //var cleanedValue = $(this).val().trim();
            var cleanedValue = $(this).val().replace(/\s+/g, '');
            // Asigna el valor limpio de vuelta al campo
            $(this).val(cleanedValue);
        });
    });

</script>
