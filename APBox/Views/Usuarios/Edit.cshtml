
@model API.Catalogos.Usuario
@using APBox.Context;

@{ ViewBag.Title = "Editar"; }

<script src="~/Content/Infodextra/Usuarios.js"></script>


@using (Html.BeginForm())
{

    var _db = new APBoxContext();
    var sucursalId = Convert.ToInt32(Session["SucursalId"]);
    var GrupoId = _db.Sucursales.Find(sucursalId).GrupoId;
    var sucursalesgrupo = _db.Sucursales.Where(e => e.GrupoId == GrupoId).ToList();
    //var usuarioId = Convert.ToInt32(Session["UsuarioId"]);
    //var usuario = _db.Usuarios.Find(usuarioId);
    //var GrupoId = _db.Sucursales.Find(sucursalId).GrupoId;
    var usuariosucursal = _db.UsuariosSucursales.Where(e => e.UsuarioId == Model.Id).ToList();

    var selectedSucursalIds = usuariosucursal.Select(e => e.SucursalId).ToList(); // Lista de IDs seleccionados
    var selectedSucursalIdsJson = System.Text.Json.JsonSerializer.Serialize(selectedSucursalIds);


    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.GrupoId)
    @Html.HiddenFor(model => model.esProveedor)
    @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })
    <div class="card card-stretch card-flush mb-8">



        <!--begin::Card body-->
        <div class="card-body pt-0">



            <div class="py-10">
                <div class="row">
                    <div class="pb-0">
                        <!--begin::Information-->
                        <!--begin::Alert-->
                        <div class="alert bg-light-secondary border border-secondary d-flex flex-column flex-sm-row p-5 mb-10">
                            <!--begin::Icon-->
                            <i class="ki-duotone ki-key fs-2hx text-primary me-4 mb-5 mb-sm-0">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i>
                            <!--end::Icon-->
                            <!--begin::Wrapper-->
                            <div class="d-flex flex-column pe-0 pe-sm-10">
                                <!--begin::Title-->
                                <h5 class="mb-1">Datos del usuario seleccionado</h5>
                                <!--end::Title-->
                                <!--begin::Content-->
                                <span>El nombre de usuario será el <span class="badge badge-primary badge-lg">Email</span> de la empresa, asi podemos asegurar que no exista duplicidad.</span>

                                <span>En este apartado podras editar el usuario seleccionado.</span>
                                <!--end::Content-->
                            </div>
                            <!--end::Wrapper-->
                        </div>
                        <!--end::Alert-->
                        <!--end::Information-->
                    </div>
                </div>

                <div class="d-flex flex-column flex-xl-row">
                    <!--begin::Content-->
                    <div class="flex-lg-row-fluid col-6">
                        <!--begin::Ticket view-->
                        <div class="mb-0">
                            <!--begin::Heading-->
                            <div class="d-flex align-items-center">
                                <div class="row">
                                    <!--begin::Option-->
                                    <div class="col-6">
                                        <input type="radio" class="btn-check" name="tipoUsuario" id="usuarioInterno" value="usuarioInterno" checked />
                                        <label class="btn btn-outline btn-active-light-primary p-7 d-flex align-items-center mb-5" for="usuarioInterno">
                                            <i class="ki-duotone ki-badge fs-3x me-5"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span><span class="path5"></span></i>
                                            <span class="d-block fw-semibold text-start">
                                                <span class="text-gray-700 d-block fs-3">Usuario Interno</span>
                                                <span class="text-muted fw-semibold fs-6">Administradores, Operadores y Personal que necesite acceso a la plataforma.</span>
                                            </span>
                                        </label>
                                    </div>
                                    <!--end::Option-->
                                    <!--begin::Option-->
                                    <div class="col-6">
                                        <input type="radio" class="btn-check" name="tipoUsuario" id="socioComercial" value="socioComercial" />
                                        <label class="btn btn-outline btn-active-light-primary p-7 d-flex align-items-center mb-5" for="socioComercial">
                                            <i class="ki-duotone ki-shop fs-3x me-5">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                                <span class="path4"></span>
                                                <span class="path5"></span>
                                            </i>
                                            <span class="d-block fw-semibold text-start">
                                                <span class="text-gray-700 d-block fs-3">Socio Comercial</span>
                                                <span class="text-muted fw-semibold fs-6">Usuario que necesite interactuar con la entrega de CFDi, Expediente o Pagos.</span>
                                            </span>
                                        </label>
                                    </div>
                                    <!--end::Option-->
                                </div>
                                <!--end::Heading-->
                            </div>
                        </div>
                        <!--end::Ticket view-->
                    </div>
                    <!--end::Content-->
                </div>
            </div>


            <div class="separator separator-dashed mb-10"></div>


            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
            }

            <div class="d-flex mb-7 row ">
                <div class="mb-10 row ">
                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control minusculas", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-10 row">
                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                    </div>



                    <div class="form-group col-4">
                        <!--begin::Label-->
                        <label class="form-label">Seleccione las Sucursales de Acceso</label>
                        <!--end::Label-->
                        <!--begin::Input-->
                        <select id="sucursales" name="SucursalIds" class="form-control" multiple="multiple">

                            @if (usuariosucursal.Count > 0)
                            {
                                var sucursal = usuariosucursal;
                                foreach (var sucursal2 in usuariosucursal)
                                {
                                    var listasucursales = _db.Sucursales.Where(e => e.Id == sucursal2.SucursalId).FirstOrDefault();
                                    <option value="@sucursal2.SucursalId">@listasucursales.RazonSocial</option>



                                }

                                foreach (var sucursales2 in sucursalesgrupo)
                                {
                                    bool exists = usuariosucursal.Any(u => u.SucursalId == sucursales2.Id);
                                    if (!exists)
                                    {
                                        <option value="@sucursales2.Id">@sucursales2.RazonSocial</option>
                                    }
                                }
                            }
                        </select>
                        <!--end::Input-->
                    </div>

                </div>
            </div>

            <div class="d-flex mb-7 row">
                <div class="form-group col-4">
                    @Html.LabelFor(model => model.PerfilId, htmlAttributes: new { @class = "form-label required" })
                    @Html.DropDownList("PerfilId", null, "Favor de hacer su selección", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PerfilId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-4" id="divUsuarioInterno">
                    @Html.LabelFor(model => model.DepartamentoId, htmlAttributes: new { @class = "form-label required" })
                    @Html.DropDownListFor(model => model.DepartamentoId, ViewBag.Departamentos as SelectList, "Favor de hacer su selección", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartamentoId, "", new { @class = "text-danger" })
                </div>


            </div>


            <div id="divSocioComercial" class="d-flex mb-7 row visually-hidden">
                <div class="form-group col-5">
                    @Html.LabelFor(model => model.SocioComercialId, htmlAttributes: new { @class = "form-label" })

                    @Html.DropDownListFor(model => model.SocioComercialId, ViewBag.SocioComerciales as SelectList, "Favor de hacer su selección", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SocioComercialId, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
    </div>

    <!--begin::Guardar-->
    <div class="d-flex justify-content-end">
        <!--begin::Button-->
        <a href="@Url.Action("Index", "Usuarios")" class="btn btn-light me-5">
            Cancelar
        </a>
        <!--end::Button-->
        <!--begin::Button-->
        <button type="submit" class="btn btn-primary">
            <span class="indicator-label">
                Guardar
            </span>
        </button>
        <!--end::Button-->
    </div>

    <script>
    $(document).ready(function() {
        var selectedSucursalIds = @Html.Raw(selectedSucursalIdsJson);

        $('#sucursales').val(selectedSucursalIds);
    });
    </script>
    <!--end::Guardar-->
}




<script>
    $(document).ready(function () {

        var socioComercialId = $('#SocioComercialId').val();

        // Verificar si SocioComercialId tiene algún valor
        if (socioComercialId) {
            // Si tiene valor, seleccionar 'socioComercial'
            $('input[name="tipoUsuario"][value="socioComercial"]').prop('checked', true);
            $('#divUsuarioInterno').addClass('visually-hidden');
            $('#divSocioComercial').removeClass('visually-hidden');
            $("#PerfilId").prop('required', false);
            $("#DepartamentoId").prop('required', false);
            $("#SocioComercialId").prop('required', true);
        } else {
            // Si no tiene valor, seleccionar 'usuarioInterno'
            $('input[name="tipoUsuario"][value="usuarioInterno"]').prop('checked', true);
            $('#divUsuarioInterno').removeClass('visually-hidden');
            $('#divSocioComercial').addClass('visually-hidden');
            $("#PerfilId").prop('required', true);
            $("#DepartamentoId").prop('required', true);
            $("#SocioComercialId").prop('required', false);
        }

        // Manejar el cambio de los radio buttons
        $('input[name="tipoUsuario"]').change(function () {
            var selectedValue = $(this).val();
            if (selectedValue === 'usuarioInterno') {
                $('#divUsuarioInterno').removeClass('visually-hidden');
                $('#divSocioComercial').addClass('visually-hidden');
                $("#PerfilId").prop('required', true);
                $("#DepartamentoId").prop('required', true);
                $("#SocioComercialId").prop('required', false);
            } else if (selectedValue === 'socioComercial') {
                $('#divUsuarioInterno').addClass('visually-hidden');
                $('#divSocioComercial').removeClass('visually-hidden');
                $("#PerfilId").prop('required', false);
                $("#DepartamentoId").prop('required', false);
                $("#SocioComercialId").prop('required', true);
            }
        });
    });

</script>

<script>
    $(document).ready(function () {
        // Seleccionar todos los elementos select y agregar la clase .select2
        $('select').addClass('select');
        // Inicializar select2
        $('.select').select2();
    });
</script>

<script>
    $(document).ready(function () {
        function toLowerCaseAndReplicate() {
            // Convierte el texto a minúsculas
            var lowerCaseValue = $(this).val().toLowerCase();
            $(this).val(lowerCaseValue);
            // Si es el campo #Email, replica el valor en #NombreUsuario
            if (this.id === 'Email') {
                $('#NombreUsuario').val(lowerCaseValue);
            }
        }

        // Selecciona todos los elementos con la clase 'minusculas' y el campo #Email
        $('.minusculas, #Email').on('input', toLowerCaseAndReplicate);

        // Añadir evento de pegado para cambiar a minúsculas el texto pegado y replicarlo
        $('.minusculas, #Email').on('paste', function (event) {
            event.preventDefault();
            var text = (event.originalEvent.clipboardData || window.clipboardData).getData('text').toLowerCase();
            var newValue = $(this).val() + text;
            $(this).val(newValue);
            // Si es el campo #Email, replica el valor en #NombreUsuario
            if (this.id === 'Email') {
                $('#NombreUsuario').val(newValue);
            }
        });
    });
</script>
