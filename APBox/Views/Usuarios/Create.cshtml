@model API.Catalogos.Usuario

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.GrupoId)
    @Html.HiddenFor(model => model.esProveedor)
    @Html.HiddenFor(model => model.Status, new { @value = API.Enums.Status.Activo })

    <div class="card card-stretch card-flush mb-8">
        <!--begin::Card body-->
        <div class="card-body pt-0">
            <div class="py-10">
                <div class="row">
                    <div class="pb-0">
                        <!--begin::Information-->
                        <!--begin::Alert-->
                        <div class="alert bg-light-secondary border border-secondary d-flex flex-column flex-sm-row p-5 mb-10">
                            <!--begin::Icon-->
                            <i class="ki-duotone ki-key fs-2hx text-primary me-4 mb-5 mb-sm-0">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i>
                            <!--end::Icon-->
                            <!--begin::Wrapper-->
                            <div class="d-flex flex-column pe-0 pe-sm-10">
                                <!--begin::Title-->
                                <h5 class="mb-1">Datos de Acceso</h5>
                                <!--end::Title-->
                                <!--begin::Content-->
                                <span>El nombre de usuario será el <span class="badge badge-primary badge-lg">Email</span> de la empresa, asi podemos asegurar que no exista duplicidad.</span>
                                <span>La contraseña creada para todos los usuarios será <span class="badge badge-primary badge-lg">A12345</span> ellos podrán cambiarla después de entrar al sistema.</span>
                                <span>Al terminar se enviará un correo con los datos de acceso completos.</span>
                                <!--end::Content-->
                            </div>
                            <!--end::Wrapper-->
                        </div>
                        <!--end::Alert-->
                        <!--end::Information-->
                    </div>
                </div>

                <div class="d-flex flex-column flex-xl-row">
                    <!--begin::Content-->
                    <div class="flex-lg-row-fluid col-6">
                        <!--begin::Ticket view-->
                        <div class="mb-0">
                            <!--begin::Heading-->
                            <div class="d-flex align-items-center">
                                <div class="row">
                                    <!--begin::Option-->
                                    <div class="col-6">
                                        <input type="radio" class="btn-check" name="tipoUsuario" id="usuarioInterno" value="usuarioInterno" checked />
                                        <label class="btn btn-outline btn-active-light-primary p-7 d-flex align-items-center mb-5" for="usuarioInterno">
                                            <i class="ki-duotone ki-badge fs-3x me-5"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span><span class="path5"></span></i>
                                            <span class="d-block fw-semibold text-start">
                                                <span class="text-gray-700 d-block fs-3">Usuario Interno</span>
                                                <span class="text-muted fw-semibold fs-6">Administradores, Operadores y Personal que necesite acceso a la plataforma.</span>
                                            </span>
                                        </label>
                                    </div>
                                    <!--end::Option-->
                                    <!--begin::Option-->
                                    <div class="col-6">
                                        <input type="radio" class="btn-check" name="tipoUsuario" id="socioComercial" value="socioComercial" />
                                        <label class="btn btn-outline btn-active-light-primary p-7 d-flex align-items-center mb-5" for="socioComercial">
                                            <i class="ki-duotone ki-shop fs-3x me-5">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                                <span class="path4"></span>
                                                <span class="path5"></span>
                                            </i>
                                            <span class="d-block fw-semibold text-start">
                                                <span class="text-gray-700 d-block fs-3">Socio Comercial</span>
                                                <span class="text-muted fw-semibold fs-6">Usuario que necesite interactuar con la entrega de CFDi, Expediente o Pagos.</span>
                                            </span>
                                        </label>
                                    </div>
                                    <!--end::Option-->
                                </div>
                                <!--end::Heading-->
                            </div>
                        </div>
                        <!--end::Ticket view-->
                    </div>
                    <!--end::Content-->
                </div>
            </div>


            <div class="separator separator-dashed mb-10"></div>


            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
            }

            <div class="d-flex mb-7 row ">
                <div class="mb-10 row ">
                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-10 row">
                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "form-label required" })
                        @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4 ">
                        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control mb-2" } })
                        @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-4">
                        <!--begin::Label-->
                        <label class="form-label">Acceso</label>
                        <!--end::Label-->
                        <!--begin::Input-->
                        <div class="form-check form-check-custom form-check-solid mb-2">
                            <input class="form-check-input" type="checkbox" value="true" checked>
                            <label class="form-check-label">Todas las sucursales</label>
                        </div>
                        <!--end::Input-->
                    </div>

                </div>
            </div>

            <div id="divUsuarioInterno" class="d-flex mb-7 row">
                <div class="form-group col-4">
                    @Html.LabelFor(model => model.PerfilId, htmlAttributes: new { @class = "form-label required" })
                    @Html.DropDownList("PerfilId", null, "Favor de hacer su selección", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PerfilId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-4">
                    @Html.LabelFor(model => model.Departamento_Id, htmlAttributes: new { @class = "form-label required" })
                    @Html.DropDownListFor(model => model.Departamento_Id, ViewBag.Departamentos as SelectList, "Favor de hacer su selección", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Departamento_Id, "", new { @class = "text-danger" })
                </div>


            </div>


            <div id="divSocioComercial" class="d-flex mb-7 row visually-hidden">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.SocioComercialID, htmlAttributes: new { @class = "form-label" })
                    <div class="col-md-10">
                        <div class="select">
                            @Html.DropDownListFor(model => model.SocioComercialID, ViewBag.SociosComerciales as SelectList, "Favor de hacer su selección", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SocioComercialID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!--begin::Guardar-->
    <div class="d-flex justify-content-end">
        <!--begin::Button-->
        <a href="@Url.Action(" Index","Usuarios")" class="btn btn-light me-5">
            Cancelar
        </a>
        <!--end::Button-->
        <!--begin::Button-->
        <button type="submit" class="btn btn-primary">
            <span class="indicator-label">
                Guardar
            </span>
        </button>
        <!--end::Button-->
    </div>
    <!--end::Guardar-->


}

<script>
    $(document).ready(function () {
        // Manejar el cambio de los radio buttons
        $('input[name="tipoUsuario"]').change(function () {
            var selectedValue = $(this).val();
            if (selectedValue === 'UsuarioInterno') {
                $('#divUsuarioInterno').removeClass('visually-hidden');
                $('#divSocioComercial').addClass('visually-hidden');

            } else if (selectedValue === 'SocioComercial') {
                $('#divUsuarioInterno').addClass('visually-hidden');
                $('#divSocioComercial').removeClass('visually-hidden');
            }
        });
    });

</script>

@*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>*@

@*<script>

    /*
     * Kevin Enrique
     * Descripción: Chek Box de Proveedores, selecion de perfil automatico  y envio de datos booleanos.
     */
    $(document).ready(function () {
        $('#chkProveedor').change(function () {
            if ($(this).is(':checked')) {
                $('#divSocioComercial').show();
                $('#perfilid').hide();
                $('#departamentoid').hide();
            } else {
                $('#divSocioComercial').hide();
                $('#perfilid').show();
                $('#departamentoid').show();
            }
        });
        $('#chkProveedor').trigger('change');
    });


    document.getElementById('chkProveedor').addEventListener('change', function () {
        if (this.checked) {

            document.querySelector('input[name="esProveedor"]').value = "true";
        } else {

            document.querySelector('input[name="esProveedor"]').value = "false";
        }
    });


</script>*@



<script>
    $(document).ready(function () {
        // Seleccionar todos los elementos select y agregar la clase .select2
        $('select').addClass('select');
        // Inicializar select2
        $('.select').select2();
    });
</script>

<script>
    $(document).ready(function () {
        $('#Email').on('input', function () {
            var emailValue = $(this).val();
            $('#NombreUsuario').val(emailValue);
        });
    });
</script>